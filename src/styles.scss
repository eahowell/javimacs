
// @use '@angular/material' as mat;


// // html, body { height: 100%; }
// // body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }

// html {
//   // color-scheme: light dark;
//   @include mat.theme((
//     color: mat.$azure-palette,
//     typography: Roboto,
//     density: 0
//   ));
// }
@use "@angular/material" as mat;
@use "./styles/_theme-colors.scss" as theme-colors;
html {
  // color-scheme: dark;/
  @include mat.theme(
    (
      color: (
        theme-type: dark,
        primary: theme-colors.$primary-palette,
        tertiary: theme-colors.$tertiary-palette,
      ),
      typography: Roboto,
      density: 0,
    )
  );
}

html,
body {
  height: 100%;
}
body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}
body {
  background: var(--mat-sys-surface);
  color: var(--mat-sys-on-surface);
}
/*
  Modern Menu Component Styles

  This stylesheet demonstrates advanced SCSS techniques:
  - CSS Grid and Flexbox for responsive layouts
  - CSS Custom Properties for theming
  - SCSS mixins for reusable styles
  - BEM-inspired naming conventions
  - Mobile-first responsive design
*/

// SCSS Variables for consistent theming
$primary-color: var(--mat-sys-primary);
$accent-color: var(--mat-sys-secondary);
$warn-color: var(--mat-sys-error);
$surface-color: var(--mat-sys-surface);
$on-surface-color: var(--mat-sys-on-surface);

// Spacing system following Material Design principles
$spacing-xs: 4px;
$spacing-sm: 8px;
$spacing-md: 16px;
$spacing-lg: 24px;
$spacing-xl: 32px;
$spacing-xxl: 48px;

// Responsive breakpoints
$mobile: 768px;
$tablet: 1024px;
$desktop: 1200px;

// SCSS Mixins for reusable styles
@mixin card-shadow {
  box-shadow:
    0px 2px 1px -1px rgba(0, 0, 0, 0.2),
    0px 1px 1px 0px rgba(0, 0, 0, 0.14),
    0px 1px 3px 0px rgba(0, 0, 0, 0.12);
}

@mixin card-hover {
  transition: transform 0.2s ease, box-shadow 0.2s ease;

  &:hover {
    transform: translateY(-2px);
    box-shadow:
      0px 4px 5px -2px rgba(0, 0, 0, 0.2),
      0px 7px 10px 1px rgba(0, 0, 0, 0.14),
      0px 2px 16px 1px rgba(0, 0, 0, 0.12);
  }
}

@mixin responsive-grid($min-width: 300px, $gap: $spacing-lg) {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax($min-width, 1fr));
  gap: $gap;
}
